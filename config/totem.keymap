//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <100>;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tvp {
            timeout-ms = <100>;
            key-positions = <11 12 13>;
            bindings = <&tog 0>;
        };
    };

    macros {
        gif: gif {
            label = "giphy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N2>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp G &kp I &kp F>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        STRDY {
            label = "BASE";
            bindings = <
       &kp V       &kp M       &kp L         &kp C        &kp P        &kp X        &kp F            &kp O         &kp U       &kp J
       &mt LGUI S  &mt LALT T  &mt LCTRL R   &mt LSHFT D  &kp Y        &kp DOT      &mt RSHFT N      &mt RCTRL A   &mt RALT E  &mt RGUI I
&none  &kp Z       &kp K       &kp Q         &kp G        &kp W        &kp B        &kp H            &kp APOS      &kp SEMI    &kp COMMA   &none
                               &lt 5 ESCAPE  &lt 3 SPACE  &lt 4 TAB    &lt 4 ENTER  &lt 3 BACKSPACE  &lt 5 DELETE
            >;
        };

        QWERTY {
            bindings = <
        &kp Q           &kp W           &kp E        &kp R             &kp T     &kp Y   &kp U              &kp I        &kp O            &kp P
        &mt LEFT_WIN A  &mt LEFT_ALT S  &mt LCTRL D  &mt LEFT_SHIFT F  &kp G     &kp H   &mt RIGHT_SHIFT J  &mt RCTRL K  &mt RIGHT_ALT L  &mt RIGHT_WIN SEMI
&trans  &kp Z           &kp X           &kp C        &kp V             &kp B     &kp N   &kp M              &kp COMMA    &kp DOT          &kp FSLH            &trans
                                        &trans       &trans            &trans    &trans  &trans             &trans
            >;
        };

        Gaming {
            bindings = <
        &kp GRAVE  &kp N1  &kp N2     &kp N3     &kp N4    &tog 2  &tog 2  &tog 2  &tog 2  &tog 2
        &kp TAB    &kp Q   &kp W      &kp E      &kp R     &tog 2  &tog 2  &tog 2  &tog 2  &tog 2
&trans  &kp LSHFT  &kp A   &kp S      &kp D      &kp F     &tog 2  &tog 2  &tog 2  &tog 2  &tog 2  &trans
                           &kp LCTRL  &kp SPACE  &mo 6     &tog 2  &tog 2  &tog 2
            >;
        };

        Nav_Numbers {
            bindings = <
       &kp INS       &none     &none     &none      &none            &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT
       &caps_word    &kp HOME  &kp UP    &kp END    &kp PAGE_UP      &kp EQUAL  &kp N4  &kp N5   &kp N6  &kp GRAVE
&none  &kp CAPSLOCK  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PAGE_DOWN    &kp BSLH   &kp N1  &kp N2   &kp N3  &kp FSLH   &none
                               &none     &none      &none            &kp MINUS  &kp N0  &kp DOT
            >;
        };

        Shortcut_Symbol {
            bindings = <
       &kp ESCAPE  &kp LG(L)  &kp LC(LS(N))  &kp LC(LS(T))  &kp LC(W)    &kp LEFT_BRACE        &kp AMPERSAND    &kp ASTERISK           &kp PLUS   &kp RIGHT_BRACE
       &kp LC(A)   &kp LC(S)  &kp LG(LS(S))  &kp LC(F)      &kp LC(N)    &kp LESS_THAN         &kp DOLLAR       &kp PERCENT            &kp CARET  &kp GREATER_THAN
&none  &kp LC(Z)   &kp LC(X)  &kp LC(C)      &kp LC(V)      &kp LC(Y)    &kp PIPE              &kp EXCLAMATION  &kp AT_SIGN            &kp HASH   &kp QUESTION      &kp TILDE
                              &kp LA(TAB)    &none          &none        &kp LEFT_PARENTHESIS  &kp UNDERSCORE   &kp RIGHT_PARENTHESIS
            >;
        };

        Media_Function {
            bindings = <
       &sys_reset  &bt BT_CLR      &to 0              &to 1             &tog 2        &none  &kp F7  &kp F8  &kp F9  &kp F12
       &none       &bt BT_PRV      &kp C_VOLUME_UP    &bt BT_NXT        &none         &none  &kp F4  &kp F5  &kp F6  &kp F11
&none  &none       &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_NEXT        &none         &none  &kp F1  &kp F2  &kp F3  &kp F10  &none
                                   &kp C_MUTE         &kp C_PLAY_PAUSE  &kp C_STOP    &none  &none   &none
            >;
        };

        Gaming_2 {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
